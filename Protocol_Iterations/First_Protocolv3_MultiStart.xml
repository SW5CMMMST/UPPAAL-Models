<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
int n = 0;                             // Number of Timeslots connected
int i = 0;                             // Current time slot in the frame
int joining_ID = -1;                   // The ID of the device joining       
int Connected_Counter = 0;             //Global Counter for Connected Devices
int emptySubSlotA = 0;
int emptySubSlotB = 0;
int emptySubSlotC = 0;
bool one_Started = false;
const int Delta = 250;                 //Timeslot Length
const int Delta_Proc = Delta/5;
const int Real_Tx_Time = Delta/2;
const int Tx_Time = Delta_Proc + Real_Tx_Time;
const int Initial_Wait_Time = Delta*3;
int Startup_Time = Initial_Wait_Time*2;
int Transmitters = 0;
clock startup;
clock time;
clock LastTransmission;

//Random Backoff
typedef int[0,1]  firstBackoff;
typedef int[0,3]  SecondBackoff;
typedef int[0,7]  thirdBackoff;
typedef int[0,15] fourthBackoff;
typedef int[0,31] fifthBackoff;


//Channel
broadcast chan transmit;
broadcast chan join;

//Device Creation
const int N = 6;
typedef int[1,N] id_t;</declaration>
	<template>
		<name x="5" y="5">Device</name>
		<parameter>const id_t id</parameter>
		<declaration>// Place local declarations here.
clock x;
clock transmit_time;
int k = -1;                     //Timeslot
bool Connected = false;
int join_Count = 0;      
int Min_Units_For_Join = 0;
bool bool_emptySubSlotA = false;
bool bool_emptySubSlotB = false;
bool bool_emptySubSlotC = false;
int WaitLoopCount = 0;
int backoff = 0;
int FailCount = 0;
int StartLoopCount = 0;
int StartAttempts = 0;
int FrameCount = 0;
int randomBackoff;
int kill_chance = 10;



// Local copies of globals
int local_n = 0;                // Number of devices connected
int local_i = 0;               // Current time slot in the frame

void increment_Slot(){
    local_i = (local_i % local_n)+1;
}

void receive()
{
    local_i = i;
    local_n = n;
}
void attempt_Join_Network(){
    i = local_i;
    joining_ID = id;
}

void join_Network(){
    k=n;
    n = n+1;
    i = local_i;
    local_n = local_n+1;
    Connected = true;
    joining_ID = -1;
    Connected_Counter++;
}

void calc_Min_Validate(){
    if(local_n == 2) {
        Min_Units_For_Join = 1;
    } else {
        Min_Units_For_Join = (local_n-1)/2;
    }
}

void create_Network(){
    k = 1;
    i = 0;
    local_i = 0;
    local_n = 2;
    Connected = true;
    x:=0;
    Transmitters++;
    Connected_Counter++;
}

void make_Payload(){
    i = local_i;
    n = local_n;
}

void ResetJoins(){
    emptySubSlotA = 0;
    emptySubSlotB = 0;
    emptySubSlotC = 0;
    bool_emptySubSlotA = false;
    bool_emptySubSlotB = false;
    bool_emptySubSlotC = false;
}


</declaration>
		<location id="id0" x="348" y="1045">
			<name x="365" y="1037">Kill_The_Network</name>
			<committed/>
		</location>
		<location id="id1" x="-85" y="127">
			<label kind="invariant" x="-51" y="118">transmit_time&lt;=Real_Tx_Time</label>
		</location>
		<location id="id2" x="-246" y="705">
			<label kind="invariant" x="-229" y="671">transmit_time&lt;=
Real_Tx_Time</label>
		</location>
		<location id="id3" x="-340" y="-25">
			<name x="-340" y="-59">p</name>
			<label kind="invariant" x="-323" y="-42">x&lt;=Delta</label>
		</location>
		<location id="id4" x="739" y="-297">
			<name x="729" y="-331">q</name>
			<label kind="invariant" x="603" y="-323">x &lt;= Delta*local_n</label>
		</location>
		<location id="id5" x="-85" y="340">
			<name x="-111" y="306">g</name>
			<label kind="invariant" x="-76" y="348">x&lt;=Delta</label>
		</location>
		<location id="id6" x="110" y="-17">
			<committed/>
		</location>
		<location id="id7" x="1173" y="731">
			<name x="1156" y="697">m</name>
			<label kind="invariant" x="1190" y="722">transmit_time&lt;=Real_Tx_Time</label>
		</location>
		<location id="id8" x="1173" y="510">
			<name x="1163" y="476">l</name>
			<committed/>
		</location>
		<location id="id9" x="816" y="93">
			<name x="806" y="59">i</name>
			<label kind="invariant" x="739" y="68">x&lt;= Delta</label>
		</location>
		<location id="id10" x="1173" y="93">
			<name x="1173" y="59">AA</name>
			<label kind="invariant" x="1198" y="67">x&lt;=Delta</label>
		</location>
		<location id="id11" x="833" y="510">
			<name x="823" y="476">j</name>
			<label kind="invariant" x="773" y="518">x&lt;=Delta_Proc</label>
		</location>
		<location id="id12" x="450" y="221">
			<name x="440" y="187">h</name>
			<label kind="invariant" x="374" y="230">x &lt;= Delta</label>
		</location>
		<location id="id13" x="-816" y="671">
			<committed/>
		</location>
		<location id="id14" x="390" y="-162">
			<name x="380" y="-196">A</name>
			<label kind="invariant" x="408" y="-170">x &lt;= Delta</label>
		</location>
		<location id="id15" x="110" y="-484">
			<name x="100" y="-518">r</name>
			<label kind="invariant" x="127" y="-501">x &lt;= Delta</label>
		</location>
		<location id="id16" x="187" y="535">
			<name x="177" y="501">Just_Received</name>
			<label kind="invariant" x="204" y="527">x&lt;=Delta</label>
		</location>
		<location id="id17" x="-382" y="535">
			<name x="-476" y="501">Done_Transmitting</name>
			<label kind="invariant" x="-408" y="484">x&lt;=Delta</label>
		</location>
		<location id="id18" x="-85" y="535">
			<name x="-59" y="510">Main_Loop</name>
			<committed/>
		</location>
		<location id="id19" x="187" y="918">
			<name x="161" y="926">Receving</name>
			<label kind="invariant" x="161" y="943">x &lt;= Delta</label>
		</location>
		<location id="id20" x="-382" y="918">
			<name x="-425" y="926">Transmitting</name>
			<label kind="invariant" x="-569" y="943">transmit_time&lt;=Real_Tx_Time</label>
		</location>
		<location id="id21" x="-85" y="918">
			<name x="-111" y="935">Tx_Or_Rx</name>
			<committed/>
		</location>
		<location id="id22" x="-85" y="782">
			<name x="-68" y="765">User_Code</name>
			<label kind="invariant" x="-68" y="782">x &lt;= Delta_Proc</label>
		</location>
		<location id="id23" x="110" y="-162">
			<name x="-94" y="-162">User_Code_Not_Connected</name>
			<label kind="invariant" x="-9" y="-187">x &lt;= Delta_Proc</label>
		</location>
		<location id="id24" x="390" y="-17">
			<name x="416" y="-34">Receiving_Not_Connected</name>
		</location>
		<location id="id25" x="110" y="-289">
			<name x="127" y="-306">Network_Found</name>
			<committed/>
		</location>
		<location id="id26" x="-340" y="-484">
			<name x="-314" y="-527">Listen_For_Network</name>
			<label kind="invariant" x="-323" y="-509">x &lt;= Initial_Wait_Time</label>
		</location>
		<location id="id27" x="-382" y="-569">
			<name x="-441" y="-603">Initialize</name>
			<label kind="invariant" x="-560" y="-586">startup&lt;= Startup_Time</label>
		</location>
		<branchpoint id="id28" x="348" y="918">
		</branchpoint>
		<init ref="id27"/>
		<transition>
			<source ref="id4"/>
			<target ref="id26"/>
			<label kind="guard" x="348" y="-535">WaitLoopCount &gt; backoff and
x == Delta*local_n</label>
			<label kind="assignment" x="425" y="-493">x:=0,
WaitLoopCount = 0</label>
			<nail x="561" y="-552"/>
			<nail x="-314" y="-552"/>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id18"/>
			<label kind="guard" x="25" y="646">x == Delta
and local_n &gt; 2</label>
			<label kind="assignment" x="51" y="688">x:=0</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id26"/>
			<label kind="select" x="-1055" y="1189">randomBackoff : int[0,31]</label>
			<label kind="guard" x="-1063" y="1206">StartAttempts &gt;= 5</label>
			<label kind="assignment" x="-901" y="1207">backoff = randomBackoff</label>
			<nail x="348" y="1232"/>
			<nail x="-1080" y="1231"/>
			<nail x="-1080" y="-485"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id26"/>
			<label kind="select" x="-1012" y="1138">randomBackoff : int[0,15]</label>
			<label kind="guard" x="-1021" y="1155">StartAttempts == 4</label>
			<label kind="assignment" x="-875" y="1156">backoff = randomBackoff</label>
			<nail x="348" y="1181"/>
			<nail x="-1038" y="1180"/>
			<nail x="-1038" y="-485"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id26"/>
			<label kind="select" x="-978" y="1095">randomBackoff : int[0,7]</label>
			<label kind="guard" x="-978" y="1112">StartAttempts == 3</label>
			<label kind="assignment" x="-833" y="1122">backoff = randomBackoff</label>
			<nail x="348" y="1138"/>
			<nail x="-995" y="1138"/>
			<nail x="-995" y="-485"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id26"/>
			<label kind="select" x="-902" y="1044">randomBackoff : int[0,3]</label>
			<label kind="guard" x="-919" y="1061">StartAttempts == 2</label>
			<label kind="assignment" x="-782" y="1062">backoff = randomBackoff</label>
			<nail x="348" y="1087"/>
			<nail x="-944" y="1087"/>
			<nail x="-944" y="-485"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id26"/>
			<label kind="select" x="-858" y="994">randomBackoff : int[0,1]</label>
			<label kind="guard" x="-867" y="1011">StartAttempts == 1</label>
			<label kind="assignment" x="-748" y="1028">backoff = randomBackoff</label>
			<nail x="-884" y="1045"/>
			<nail x="-885" y="-485"/>
		</transition>
		<transition>
			<source ref="id28"/>
			<target ref="id0"/>
			<label kind="assignment" x="357" y="952">Connected = false,
Connected_Counter--,
StartAttempts++</label>
			<label kind="probability" x="357" y="926">kill_chance</label>
		</transition>
		<transition>
			<source ref="id28"/>
			<target ref="id18"/>
			<label kind="probability" x="357" y="884">90</label>
			<nail x="348" y="485"/>
			<nail x="-34" y="485"/>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id28"/>
			<label kind="guard" x="229" y="859">x==Delta
and local_n == 2</label>
			<label kind="assignment" x="229" y="893">x:=0</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id5"/>
			<label kind="guard" x="-314" y="153">transmit_time == Real_Tx_Time
and Transmitters == 1</label>
			<label kind="synchronisation" x="-178" y="195">transmit!</label>
			<label kind="assignment" x="-289" y="221">attempt_Join_Network()</label>
			<nail x="-119" y="229"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id5"/>
			<label kind="guard" x="-25" y="204">transmit_time == Real_Tx_Time 
and Transmitters &gt; 1</label>
			<nail x="-42" y="229"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id1"/>
			<label kind="guard" x="-110" y="-8">local_i == local_n 
and x == Delta_Proc
and joining_ID == -1</label>
			<label kind="assignment" x="34" y="42">transmit_time=0,
Transmitters++</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id17"/>
			<label kind="guard" x="-323" y="595">transmit_time == Real_Tx_Time</label>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id2"/>
			<label kind="guard" x="-323" y="773">local_i == k 
and Transmitters &gt; 0</label>
			<label kind="assignment" x="-297" y="816">transmit_time:=0,
Transmitters++</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id5"/>
			<label kind="guard" x="629" y="595">Transmitters &gt; 1 and
transmit_time == Real_Tx_Time</label>
			<label kind="assignment" x="467" y="518">k=local_n,
ResetJoins(),
local_n++,
Connected=true,
Connected_Counter++,
joining_ID = -1</label>
			<nail x="1011" y="637"/>
			<nail x="399" y="637"/>
			<nail x="399" y="340"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id4"/>
			<label kind="guard" x="782" y="-442">WaitLoopCount &lt;= backoff and
x == Delta*local_n and
joining_ID == id</label>
			<label kind="assignment" x="807" y="-382">joining_ID = -1,
x:=0,
WaitLoopCount++</label>
			<nail x="765" y="-357"/>
			<nail x="807" y="-323"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id9"/>
			<label kind="guard" x="952" y="0">x == Delta</label>
			<nail x="1096" y="0"/>
			<nail x="884" y="0"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id9"/>
			<label kind="guard" x="535" y="144">x ==Delta</label>
			<nail x="518" y="170"/>
			<nail x="748" y="170"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id15"/>
			<label kind="synchronisation" x="-51" y="-323">transmit?</label>
			<label kind="assignment" x="-68" y="-306">receive(),
x=Tx_Time</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id3"/>
			<label kind="guard" x="-603" y="-68">x==Delta and
StartLoopCount &lt;= backoff</label>
			<label kind="assignment" x="-552" y="-17">StartLoopCount++,
x:=0</label>
			<nail x="-416" y="-67"/>
			<nail x="-416" y="35"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id5"/>
			<label kind="guard" x="-331" y="340">x == Delta and
StartLoopCount &gt;= backoff</label>
			<label kind="assignment" x="-331" y="374">create_Network()</label>
			<nail x="-340" y="340"/>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id3"/>
			<label kind="guard" x="-323" y="-416">x == Initial_Wait_Time</label>
			<label kind="assignment" x="-323" y="-391">x:=0</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id4"/>
			<label kind="select" x="1972" y="136">randomBackoff : int[0,15]</label>
			<label kind="guard" x="1887" y="204">local_i == local_n
and join_Count &lt; Min_Units_For_Join
and FailCount == 3</label>
			<label kind="assignment" x="1963" y="153">FailCount++,
x:=0,
backoff = randomBackoff</label>
			<nail x="2142" y="510"/>
			<nail x="2142" y="-297"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id4"/>
			<label kind="select" x="1717" y="229">randomBackoff : int[0,7]</label>
			<label kind="guard" x="1623" y="297">local_i == local_n
and join_Count &lt; Min_Units_For_Join
and FailCount == 2</label>
			<label kind="assignment" x="1708" y="246">FailCount++,
x:=0,
backoff = randomBackoff</label>
			<nail x="1870" y="510"/>
			<nail x="1870" y="-297"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id4"/>
			<label kind="select" x="1462" y="323">randomBackoff : int[0,3]</label>
			<label kind="guard" x="1360" y="391">local_i == local_n
and join_Count &lt; Min_Units_For_Join
and FailCount == 1</label>
			<label kind="assignment" x="1445" y="340">FailCount++,
x:=0,
backoff = randomBackoff</label>
			<nail x="1615" y="510"/>
			<nail x="1615" y="-297"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id4"/>
			<label kind="select" x="2244" y="34">randomBackoff : int[0,31]</label>
			<label kind="guard" x="2167" y="85">local_i == local_n
and join_Count &lt; Min_Units_For_Join
and FailCount == 4</label>
			<label kind="assignment" x="2235" y="51">x:=0,
backoff = randomBackoff</label>
			<nail x="2439" y="510"/>
			<nail x="2448" y="-297"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="773" y="-238">transmit?</label>
			<label kind="assignment" x="790" y="-263">receive()</label>
			<nail x="807" y="-272"/>
			<nail x="739" y="-221"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id4"/>
			<label kind="select" x="1164" y="-280">randomBackoff : int[0,1]</label>
			<label kind="guard" x="1079" y="-204">local_i == local_n
and join_Count &lt; Min_Units_For_Join
and FailCount == 0</label>
			<label kind="assignment" x="1156" y="-263">FailCount++,
x:=0,
backoff = randomBackoff</label>
			<nail x="1326" y="510"/>
			<nail x="1326" y="-297"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id4"/>
			<label kind="guard" x="501" y="-246">WaitLoopCount &lt;= backoff and
x == Delta*local_n and
joining_ID != id</label>
			<label kind="assignment" x="535" y="-297">x:=0,
WaitLoopCount++</label>
			<nail x="654" y="-289"/>
			<nail x="680" y="-238"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id9"/>
			<label kind="guard" x="926" y="212">joining_ID != id</label>
			<label kind="synchronisation" x="986" y="229">join?</label>
			<label kind="assignment" x="1037" y="212">receive(),
x:=Tx_Time</label>
			<nail x="1105" y="204"/>
			<nail x="884" y="204"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id9"/>
			<label kind="guard" x="663" y="314">joining_ID != id</label>
			<label kind="synchronisation" x="544" y="314">join?</label>
			<label kind="assignment" x="578" y="297">receive(),
x:=Tx_Time</label>
			<nail x="450" y="340"/>
			<nail x="807" y="340"/>
			<nail x="807" y="136"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="952" y="59">transmit?</label>
			<label kind="assignment" x="952" y="102">x:=Tx_Time,
receive()</label>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="637" y="238">transmit?</label>
			<label kind="assignment" x="552" y="221">receive(),
x:=Tx_Time</label>
			<nail x="510" y="263"/>
			<nail x="748" y="263"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id18"/>
			<label kind="guard" x="-76" y="365">x==Delta and
Connected == true</label>
			<label kind="assignment" x="-76" y="399">x:=0,
Transmitters--,
FrameCount = 0</label>
			<nail x="-85" y="374"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id5"/>
			<label kind="guard" x="705" y="688">Transmitters == 1 and
transmit_time == Real_Tx_Time</label>
			<label kind="synchronisation" x="646" y="705">transmit!</label>
			<label kind="assignment" x="552" y="688">join_Network(),
ResetJoins()</label>
			<nail x="399" y="731"/>
			<nail x="399" y="340"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id12"/>
			<label kind="guard" x="280" y="161">x==Delta and 
Connected == false</label>
			<label kind="assignment" x="280" y="195">x:=0,
Transmitters--</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id24"/>
			<label kind="guard" x="161" y="-59">local_i != local_n or
joining_ID != -1</label>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id6"/>
			<label kind="guard" x="8" y="-102">x==Delta_Proc</label>
			<label kind="assignment" x="0" y="-85">increment_Slot()</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id7"/>
			<label kind="guard" x="1181" y="603">local_i == local_n
and join_Count &gt;= Min_Units_For_Join</label>
			<label kind="assignment" x="1181" y="646">transmit_time:=0,
Transmitters++</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id10"/>
			<label kind="guard" x="1019" y="349">x == Delta_Proc 
and local_i != local_n</label>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id8"/>
			<label kind="guard" x="909" y="459">x==Delta_Proc</label>
			<label kind="assignment" x="900" y="476">increment_Slot()</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id9"/>
			<label kind="guard" x="850" y="-85">joining_ID == id</label>
			<label kind="synchronisation" x="1045" y="-85">join?</label>
			<label kind="assignment" x="952" y="-119">receive(),
x:=Tx_Time,
join_Count++</label>
			<nail x="1173" y="-59"/>
			<nail x="816" y="-59"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id11"/>
			<label kind="guard" x="850" y="374">x==Delta</label>
			<label kind="assignment" x="850" y="391">x:=0,
calc_Min_Validate()</label>
			<nail x="833" y="136"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id9"/>
			<label kind="guard" x="510" y="68">joining_ID == id</label>
			<label kind="synchronisation" x="476" y="68">join?</label>
			<label kind="assignment" x="620" y="51">receive(),
join_Count++</label>
			<nail x="450" y="93"/>
			<nail x="748" y="93"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id17"/>
			<label kind="synchronisation" x="-782" y="510">transmit!</label>
			<nail x="-816" y="535"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id13"/>
			<label kind="guard" x="-807" y="790">transmit_time==Real_Tx_Time
and Transmitters == 1 
and joining_ID != -1</label>
			<label kind="synchronisation" x="-807" y="765">join!</label>
			<label kind="assignment" x="-807" y="850">make_Payload()</label>
			<nail x="-816" y="918"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id17"/>
			<label kind="guard" x="-527" y="637">Transmitters &gt;= 2 and
transmit_time 
== Real_Tx_Time</label>
			<nail x="-382" y="603"/>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id23"/>
			<label kind="guard" x="221" y="-187">x==Delta</label>
			<label kind="assignment" x="221" y="-204">x:=0</label>
		</transition>
		<transition>
			<source ref="id24"/>
			<target ref="id14"/>
			<label kind="synchronisation" x="399" y="-119">transmit?</label>
			<label kind="assignment" x="399" y="-102">receive(),
x:=Tx_Time</label>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id25"/>
			<label kind="guard" x="119" y="-416">x == Delta</label>
			<label kind="assignment" x="119" y="-374">x:=0</label>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id15"/>
			<label kind="synchronisation" x="-153" y="-484">transmit?</label>
			<label kind="assignment" x="-85" y="-484">receive(),
x:=Tx_Time</label>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id18"/>
			<label kind="guard" x="76" y="510">x== Delta</label>
			<label kind="assignment" x="42" y="510">x:=0</label>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id16"/>
			<label kind="synchronisation" x="195" y="748">transmit?</label>
			<label kind="assignment" x="195" y="714">receive(),
x:=Tx_Time</label>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id18"/>
			<label kind="guard" x="-212" y="510">x == Delta</label>
			<label kind="assignment" x="-323" y="493">x:=0,
Transmitters--</label>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id17"/>
			<label kind="guard" x="-731" y="603">transmit_time 
  == Real_Tx_Time
and Transmitters == 1
and joining_ID == -1</label>
			<label kind="synchronisation" x="-654" y="586">transmit!</label>
			<label kind="assignment" x="-714" y="680">make_Payload()</label>
			<nail x="-586" y="918"/>
			<nail x="-586" y="535"/>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id22"/>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id19"/>
			<label kind="guard" x="17" y="918">local_i != k</label>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id20"/>
			<label kind="guard" x="-323" y="918">local_i == k and Transmitters == 0</label>
			<label kind="assignment" x="-306" y="935">transmit_time:=0,
Transmitters++</label>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id21"/>
			<label kind="guard" x="-77" y="816">x==Delta_Proc</label>
			<label kind="assignment" x="-76" y="833">increment_Slot()</label>
		</transition>
		<transition>
			<source ref="id25"/>
			<target ref="id23"/>
		</transition>
		<transition>
			<source ref="id27"/>
			<target ref="id26"/>
			<label kind="assignment" x="-399" y="-535">x:= 0</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
// List one or more processes to be composed into a system.
system Device;
    </system>
	<queries>
		<query>
			<formula>A&lt;&gt; forall(i: id_t) forall(j: id_t) Device(i).Connected and Device(j).Connected and Device(i).k == Device(j).k imply i == j
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>Pr[&lt;=300000] ( &lt;&gt; forall(i : id_t) forall(j : id_t) (time &gt; 3000) and (Device(i).Connected and Device(j).Connected imply (Device(i).local_n == Device(j).local_n and Device(i).local_n &gt; 2 and Device(j).local_n &gt;2)))
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>Pr[&lt;=300000] ( &lt;&gt; forall(i : id_t) forall(j : id_t) (time &gt; 3000) and (Device(i).k != Device(j).local_n))
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>Pr[&lt;=300000] ( &lt;&gt; forall(i : id_t) forall(j : id_t) (time &gt; 3000) and (Device(i).Connected and Device(j).Connected imply Device(i).k &lt; Device(i).local_n and Device(i).k &gt; 0))
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>Pr[&lt;=300000] ( &lt;&gt; forall(i : id_t) forall(j : id_t) (time &gt; 3000) and (Device(i).local_n == N+1))</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=300000] ( &lt;&gt; forall(i : id_t) forall(j : id_t) (time &gt; 3000) and (Device(i).local_n == N+1) and (Device(i).Done_Transmitting imply (Device(j).Just_Received or i == j)))</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
